<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- $Id$ -->

<!DOCTYPE Book SYSTEM "gapdoc.dtd"
[<!ENTITY Clanguage "<Package>C</Package>">] 
[<!ENTITY LAG "<Package>LAG</Package>">] 
[<!ENTITY LAGUNA "<Package>LAGUNA</Package>">]
[<!ENTITY SISYPHOS "<Package>SISYPHOS</Package>">] 
[<!ENTITY Wedderga "<Package>Wedderga</Package>">] >

<Book Name="Wedderga">

<TitlePage>
  <Title>&Wedderga;</Title>
  <Subtitle>Wedderburn Decomposition of Group Algebras</Subtitle>
  <Version>Version 4.0</Version>

  <Author>Osnel Broche Cristo 
          <Email>osnelier@ime.usp.br</Email>
          <Address>
           Instituto de Matemática<Br/>
           Universidade de Sao Paulo<Br/>
           Caixa Postal 66281, Sao Paulo<Br/>
           CEP 05315-970, Brazil</Address>
  </Author>

  <Author>Alexander Konovalov
          <Email>konovalov@member.ams.org</Email>
	  <Homepage>http://ukrgap.exponenta.ru/konoval.htm</Homepage>
          <Address>
            Department of Mathematics<Br/>
    	      Zaporozhye National University<Br/>
            P.O.Box 1317, Central Post Office<Br/>
            Zaporozhye, 69000 Ukraine
          </Address> 
  </Author>

  <Author>Ángel del Río
          <Email>adelrio@um.es</Email>
	  <Homepage>http://www.um.es/adelrio</Homepage>
          <Address>
            Departamento de Matemáticas<Br/>
            Universidad de Murcia<Br/>
            30100 Murcia, Spain
          </Address> 
  </Author>

  <Author>Aurora Olivieri
          <Email>olivieri@usb.ve</Email>
          <Address>
            Departamento de Matemáticas<Br/>
            Universidad Simón Bolívar<Br/>
            Apartado Postal 89000<Br/>
            Caracas 1080-A, Venezuela
          </Address> 
  </Author>
  
  <Date>October 2005</Date>

<Abstract>

<Index Key="Wedderga package">&Wedderga; package</Index> 
The title ``&Wedderga;'' stands for ``<B>Wedder</B>burn decomposition of a 
<B>g</B>roup <B>a</B>lgebras. This is a &GAP; package to compute primitive
central idempotents and simple components of the Wedderburn decomposition of
group algebras of finite groups over the field of rationals and over finite
fields.
<P/>

</Abstract>

<Copyright>
  &copyright; 2005 by Osnel Broche Cristo, Alexander Konovalov, 
  Ángel del Río and Aurora Olivieri<P/>

  We adopt the copyright regulations of &GAP; from the
  copyright notice in the &GAP; manual.<P/>

  If you obtained &Wedderga;, we would be grateful for a short notification
  sent to one of the authors.<P/>

  If you publish a result which was partially obtained with the usage of
  &Wedderga;, please cite it in the following form:<P/>

  O. B. Cristo, A. Konovalov, Á. del Río and A. Olivieri. 
  <E>Wedderga --- Wedderburn Decomposition of Group Algebras, 
  Version 4.0;</E> 2005 (<URL>http://ukrgap.exponenta.ru/wedderga.htm</URL>).
</Copyright>
  
<Acknowledgements>

We  are all very grateful to Steve Linton for communicating the package and to
the referee for careful testing &Wedderga; and useful suggestions. Also we 
acknowledge very much the members of the &GAP; team: Thomas Breuer, 
Alexander Hulpke, Frank L&#252;beck and many other colleagues 
for helpful comments and advise. 
<P/> 

</Acknowledgements>

</TitlePage>

<TableOfContents/>

<Body>

<!-- ********************Introduction******************** -->

<Chapter Label="Intro">
<Heading>Introduction</Heading>    

<Section Label="IntroAims">
<Heading>General aims of &Wedderga; package</Heading>

The title ``&Wedderga;'' stands for ``<B>Wedder</B>burn decomposition of 
<B>g</B>roup <B>a</B>lgebras. This is a &GAP; package to compute the simple 
components of the Wedderburn decomposition of group algebras of finite 
groups over the field of rationals and over finite fields. It also contains
functions that produce the primitive central idempotents of these group 
algebras.

</Section>

<!-- ********************************************************* -->

<Section Label="IntroMain">
<Heading>Main functions of &Wedderga; package</Heading>

The main functions of &Wedderga; are 
<Ref Attr="WedderburnDecomposition" /> and
<Ref Attr="WedderburnDecompositionInfo" />.
<P/>

<Ref Attr="WedderburnDecomposition" /> 
computes a list of simple algebras such that its direct product is a direct
factor of the group algebra <M>FG</M> given as input, where <M>G</M> should be a 
finite group, and <M>F</M> has to be either the field <M>Q</M> of rationals or a 
finite field of characterisitc coprime with the order of <M>G</M>. <P/>

If the group <M>G</M> satisfies some mild conditions the the direct product of 
the output is the full group ring <M>FG</M> so that, in that case, the output 
is the Wedderburn decomposition of <M>FG</M>. 
For example this is the case if <M>G</M> is abelian by supersolvable.
(see Chapter <Ref Chap="Theory" />) for theoretical background.  

The entries of the output are given as matrix algebras over some 
crossed products over some cyclotomic extensions of the field <M>F</M>. 
These crossed products are in fact cyclotomic algebras <Ref Sect="Cyclotomic" /> 
and thus the entries of the output of <Ref Attr="WedderburnDecomposition" /> 
are realizations of the Wedderburn components of <M>QG</M> as algebras similar 
to cyclotomic algebras. Recall that the Brauer-Witt Theorem ensures 
that every simple factor of a semisimple group ring <M>FG</M> is similar 
(that is represents the same class in the Brauer group of its centre) 
to a cyclotomic algebra <Cite Key="BR" />. <P/>

The simple factors of <M>FG</M> are also matrix algebras over division rings 
which are finite extensions of the coefficient ring <M>F</M>.
If <M>F</M> is finite then these division rings are finite fields, by Wedderburn 
Theorem. In that case the the output of <Ref Attr="WedderburnDecomposition" />
represents the factors of <M>FG</M> as matrix algebras over finite extensions of 
<M>F</M>.
<P/>

<Example>
<![CDATA[
gap> QG:=GroupRing(Rationals,SymmetricGroup(4));;
<algebra-with-one over Rationals, with 2 generators>
gap> WedderburnDecomposition(QG);
[ Rationals, Rationals, ( Rationals^[ 3, 3 ] ), ( Rationals^[ 3, 3 ] ),
  <crossed product over CF(3), with 2 generators> ]
gap> FG:=GroupRing(GF(5),SymmetricGroup(4));
<algebra-with-one over GF(5), with 2 generators>
gap> WedderburnDecomposition(FG);
[ GF(5), GF(5), ( GF(5)^[ 3, 3 ] ), ( GF(5)^[ 3, 3 ] ), ( GF(5)^[ 2, 2 ] ) ]
]]>
</Example>

Instead of <Ref Attr="WedderburnDecompositionInfo" />, that returns a list of 
GAP objects, <Ref Attr="WedderburnDecompositionInfo" /> returns the numerical 
description of these objects. 
See Chapter <Ref Sect="SSPDef" /> for theoretical background.

</Section>

<!-- ********************************************************* -->

<Section Label="IntroInstall">
<Heading>Installation and system requirements</Heading>

&Wedderga; does not use external binaries and, therefore, works without
restrictions on the type of the operation system. It is designed for &GAP;4.4  
and no compatibility with previous releases of &GAP;4 is guaranteed. 
<P/>

To use the &Wedderga; online help it is necessary to install the &GAP;4 package 
&GAPDoc; by Frank L\"ubeck and Max Neunh\"offer, which is available from the 
&GAP; site or from 
<URL>http://www.math.rwth-aachen.de/~Frank.Luebeck/GAPDoc/</URL>.
<P/> 

&Wedderga; is distributed in standard formats
(<File>zoo</File>, <File>tar.gz</File>, <File>tar.bz2</File>, 
<File>-win.zip</File>) and can be obtained from 
<URL>http://ukrgap.exponenta.ru/wedderga.htm</URL>.
To unpack the archive <File>wedderga-4.0.zoo</File> you need the program 
<File>unzoo</File>, which can be obtained from the &GAP; homepage 
<URL>http://www.gap-system.org/</URL> (see section `Distribution').
To install &Wedderga;, copy this archive into the <File>pkg</File> subdirectory of your 
&GAP;4.4 installation. The subdirectory <File>wedderga</File> will be created in 
the <File>pkg</File> directory after the following command:
<P/>
  <C>unzoo -x wedderga-4.0.zoo</C>
<P/>

</Section>

</Chapter>


<!-- ********************Decomp******************** -->

<Chapter Label="Decomp">
<Heading>Wedderburn decomposition</Heading>

<Section Label="DecompDecomp">
<Heading>Wedderburn decomposition</Heading>

<ManSection>
   <Attr Name="WedderburnDecomposition" 
         Arg="FG"  
         Comm="The Wedderburn decomposition of a group algebras given as a list 
         of gap objects" />
   <Returns>
         a list of simple algebras as GAP objects
   </Returns>
   <Description>
         Computes the list of <E>Wedderburn components</E> <Ref Sect="WedDec" /> 
         of a group algebra <M>FG</M> realizable by strongly Shoda pairs 
         <Ref Sect="SSPDef" /> of <M>G</M>.
         The input <M>FG</M> should be a group ring over a finite group <M>G</M> 
         with coefficients in <M>F</M>, where <M>F</M> is either the field 
         <M>Q</M> of rationals or a inite field whose characteristic is coprime 
         with the order of <M>G</M>. <P/>
         
         For many groups <M>G</M> every Wedderburn component of <M>FG</M> 
         is realizable by a strongly Shoda pair and then the direct product of 
         the entries of the output is isomorphic to <M>FG</M>. 
         For example these is the case if <M>G</M> is abelian-by-supersolvable 
         <Cite Key="ORS" />. 
   </Description>
</ManSection>


<Example>
<![CDATA[
gap> FD16:=GroupRing(GF(5),DihedralGroup(16));
<algebra-with-one over GF(5), with 4 generators>
gap> WedderburnDecomposition(FD16);
[ GF(5), GF(5), GF(5), GF(5), ( GF(5)^[ 2, 2 ] ), ( GF(5^2)^[ 2, 2 ] ) ]
]]>
</Example>

The previous example shows that the Wedderburn decomposition of the group 
algebra <M>GF(5)D_{16}</M> of the dihedral group of order <M>16</M> over the 
field of order <M>5</M> is <M>4GF(5) \oplus M_2(GF(5)) \oplus M_2(GF(25))</M>. <P/>

Next example shows the Wedderburn decomposition of the rational group algebra of 
the symmetric group on <M>4</M> letters.

<Example>
<![CDATA[
gap> QS4:=GroupRing(Rationals,SymmetricGroup(4));
<algebra-with-one over Rationals, with 2 generators>
gap> WedderburnDecomposition(QS4);
[ Rationals, Rationals, ( Rationals^[ 3, 3 ] ), ( Rationals^[ 3, 3 ] ),
  <crossed product over CF(3), with 2 generators> ]
]]>
</Example>

If not all the Wedderburn components of the input are realizable by strongly Shoda pairs then a warning message is
displayed together with the output.

<Example>
<![CDATA[
gap> G:=SmallGroup(24,3);QG:=GroupRing(Rationals,G);
<pc group of size 24 with 4 generators>
<algebra-with-one over Rationals, with 4 generators>
gap> WedderburnDecomposition(QG);
Wedderga: Warning!!
The direct product of the output is a PROPER direct factor of the input!
[ Rationals, CF(3), ( Rationals^[ 3, 3 ] ) ]
]]>
</Example>


<!-- ************************ -->

<ManSection>
   <Attr Name="WedderburnDecompositionInfo" 
         Arg="FG"  
         Comm="The Wedderburn decomposition of a group algebras given as a list of lists of numerical data 
         describing each Wedderburn component" />
   <Returns>
         a list of descriptions of simple algebras (not as GAP objects)
   </Returns>
   <Description>
         Computes some numerical data describing the Wedderburn components 
         <Ref Sect="WedDec" /> of a group algebra <M>FG</M> realizable by 
         strongly Shoda pairs of <M>G</M> <Ref Sect="SSPDef" />. <P/>
         
         The input <M>FG</M> should be as in <Ref Attr="WedderburnDecomposition" />. <P/>
         
         The interpretation of the information displayed by the output is 
         explained in <Ref Sect="SSPDef" />.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> F:=FreeGroup("a","b");;a:=F.1;;b:=F.2;;rel:=[a^8,a^4*b^2,b^-1*a*b*a];;
gap> Q16:=F/rel; QQ16:=GroupRing(Rationals,Q16);
<fp group on the generators [ a, b ]>
<algebra-with-one over Rationals, with 2 generators>
gap> QS4:=GroupRing(Rationals,SymmetricGroup(4));
<algebra-with-one over Rationals, with 2 generators>
gap> WedderburnDecomposition(QQ16);
[ Rationals, Rationals, Rationals, Rationals, ( Rationals^[ 2, 2 ] ),
  <crossed product over CF(8), with 2 generators> ]
gap> WedderburnDecomposition(QS4);
[ Rationals, Rationals, ( Rationals^[ 3, 3 ] ), ( Rationals^[ 3, 3 ] ),
  <crossed product over CF(3), with 2 generators> ]
gap> WedderburnDecompositionInfo(QQ16);
[ [ 1, 1, [  ], [  ] ], [ 1, 2, [  ], [  ] ], [ 1, 2, [  ], [  ] ],
  [ 1, 2, [  ], [  ] ], [ 2, 2, [  ], [  ] ], [ 1, 8, [ [ 2, 7, 4 ] ], [  ] ]
 ]
gap> WedderburnDecompositionInfo(QS4);
[ [ 1, 1, [  ], [  ] ], [ 1, 2, [  ], [  ] ], [ 3, 2, [  ], [  ] ],
  [ 3, 2, [  ], [  ] ], [ 1, 3, [ [ 2, 2, 0 ] ], [  ] ] ]
]]>
</Example>

In the previous example one has computed the Wedderburn decomposition of the 
rational group algebra <M>QQ16</M> of the quaternion group of order <M>16</M> 
and the rational group algebra <M>QS4</M> of the symmetric group in four letters.
For both group algebras one has used both <Ref Attr="WedderburnDecomposition" /> and 
<Ref Attr="WedderburnDecompositionInfo" />. <P/>

The output <Ref Attr="WedderburnDecomposition" /> shows that 
<Display>
QQ16 = 4 \Q \oplus M_2(\Q) \oplus A 
</Display>
<Display>
QS4 = 2Q \oplus 2 M_2(\Q) \oplus B
</Display>
where <M>A</M> and <M>B</M> are crossed products with coefficients in the 
cyclotomic fields <M>CF(8)</M> and <M>CF(3)</M> respectively. 
This output can be used as a GAP object but as it is it does not give precise
information on the algebras <M>A</M> and <M>B</M>. <P/>

Instead the numerical information displayed by 
<Ref Attr="WedderburnDecompositionInfo" /> means that 
  <Display>
  A = Q(\xi|\xi^8=1)[g | \xi^g = \xi^7 = \xi^{-1}, g^2 = \xi^4 = -1]
  </Display>
  <Display>
  B = Q(\xi|\xi^3=1)[g | \xi^g = \xi^2 = \xi^{-1}, g^2 = 1]
  </Display>
Both <M>A</M> and <M>B</M> are quaternion algebras over its centre which is
<M>Q(\xi+\xi^{-1})</M> and the former is equal to <M>Q(\sqrt{2})</M> and <M>Q</M> 
respectively. <P/>  

In <M>B</M>, one has <M>(g+1)(g-1)=0</M>, while <M>g</M> is neither <M>1</M> nor 
<M>-1</M>. This shows that <M>B=M_2(Q)</M>. 
However the relation <M>g^2=-1</M> in <M>A</M> shows that 
  <Display>
  A=Q(\sqrt{2})[i,g|i^2=g^2=-1,ig=-gi]
  </Display>
and so <M>A</M> is a division algebra with centre Q(\sqrt{2}), which is a 
subalgebra of the algebra of Hamiltonian quaternions.
</Section>

<!-- ********************************************************* -->

<Section Label="DecompSimple">
<Heading>Simple quotient</Heading>

<ManSection>
   <Oper Name="SimpleAlgebraByStronglySP" 
         Arg="QG K H"  
         Comm="The Wedderburn component of the rational group algebra QG 
         realized by (K,H), a strongly Shoda pair of G" />
   <Oper Name="SimpleAlgebraByStronglySP" 
         Arg="FG K H C"  
         Comm="The Wedderburn component of the semisimple finite group algebra 
         FG given realized by (K,H), a strongly Shoda pair of G, and a 
         q-cyclotomic class" />
   <Oper Name="SimpleAlgebraByStronglySPNC" 
         Arg="QG K H"  
         Comm="Same as the non NC version without cheking that (K,H) is a 
         strongly Shoda pair of G" />
   <Oper Name="SimpleAlgebraByStronglySPNC" 
         Arg="FG K H C"  
         Comm="Same as the non NC version without cheking that (K,H) is a 
         strongly Shoda pair of G" />
   <Returns>
         A simple algebra as GAP object
   </Returns>
   <Description>
         The versions with three input data computes the Wedderburn component 
         <Ref Sect="WedDec" /> of the rational group algebra <M>QG</M> of a 
         finite group <M>G</M> realized by a strongly Shoda pair <M>(K,H)</M> of 
         <M>G</M> (see Section <Ref Sect="SSPDef"/>). <P/>
         
         The versions with four input data computes the Wedderburn component of 
         the semisimple finite group algebra <M>FG</M> realized by a strongly 
         Shoda pair <M>(K,H)</M> of <M>G</M> and a generating <M>q</M>-cyclotomic 
         class module <M>[K:H]</M> (see Section <Ref Sect="CyclotomicClass"/>).
         The cyclotomic class can be given either by the cyclotomic class itself 
         or by a representative, that is an integer coprime with <M>[K:H]</M>. <P/>
         
         The versions ended in NC does not check if <M>(K,H)</M> is a 
         strongly Shoda pair of <M>G</M> and, in the four input data version, 
         if <M>C</M> is either of generating <M>q</M>-cyclotomic class <M>C</M> module 
         <M>[K:H]</M> or an integer coprime with <M>[K:H]</M>.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> F:=FreeGroup("a","b");;a:=F.1;;b:=F.2;;
gap> G:=F/[a^16,b^2*a^8,b^-1*a*b*a^9];;a:=G.1;;b:=G.2;;
gap> K:=Subgroup(G,[a]);; H:=Subgroup(G,[]);; 
gap> QG:=GroupRing(Rationals,G);;
gap> FG:=GroupRing(GF(7),G);;
gap> SimpleAlgebraByStronglySP(QG,K,H);
<crossed product over CF(16), with 2 generators>
gap> SimpleAlgebraByStronglySP(FG,K,H,[1,7]);
( GF(7)^[ 2, 2 ] )
gap> SimpleAlgebraByStronglySP(FG,K,H,1);
( GF(7)^[ 2, 2 ] )
]]>
</Example>

<!-- ************************ -->

<ManSection>
   <Oper Name="SimpleAlgebraByStronglySPInfo" 
         Arg="QG K H"  
         Comm="The numerical data describing the output of SimpleAlgebraByStronglySP" />
   <Oper Name="SimpleAlgebraByStronglySPInfo" 
         Arg="FG K H c"  
         Comm="The numerical data describing the output of SimpleAlgebraByStronglySP" />
   <Oper Name="SimpleAlgebraByStronglySPInfoNC" 
         Arg="FG K H c"  
         Comm="The numerical data describing the output of SimpleAlgebraByStronglySPNC" />         
   <Oper Name="SimpleAlgebraByStronglySPInfoNC" 
         Arg="QG K H"  
         Comm="The numerical data describing the output of SimpleAlgebraByStronglySPNC" />
   <Returns>
         description of one simple algebra (not as GAP objects)
   </Returns>
   <Description>
         The versions with three input data computes the numerical information 
         describing the Wedderburn component <Ref Sect="WedDec" /> of the 
         rational group algebra <M>QG</M> of a finite group <M>G</M> realized 
         by a strongly Shoda pair <M>(K,H)</M> of <M>G</M> 
         (see Section <Ref Sect="SSPDef"/>). <P/>
         
         The versions with four input data computes a pair <M>[n,q]</M> of 
         positive integers with <M>q</M> a prime power describing the Wedderburn 
         component of the semisimple finite group algebra <M>FG</M> realized by a 
         strongly Shoda pair <M>(K,H)</M> of <M>G</M> and a generating 
         <M>q</M>-cyclotomic class <M>C</M> module <M>[K:H]</M> as the 
         <M>n</M> by <M>n</M> matrix algebra over <M>GF(q)</M> 
         (see Section <Ref Sect="CyclotomicClass"/>). <P/>
         
         The fourth input data can be given either as a cyclotomic class or as
         one of its representatives. <P/>

         The versions ended in NC does not check if <M>(K,H)</M> is a strongly 
         Shoda pair of <M>G</M> and in the four input data version if 
         <M>C</M> is a generating <M>q</M>-cyclotomic class <M>C</M> module 
         <M>[K:H]</M> or an integer coprime with <M>[K:H]</M>.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> F:=FreeGroup("a","b");;a:=F.1;;b:=F.2;;
gap> G:=F/[a^16,b^2*a^8,b^-1*a*b*a^9];;a:=G.1;;b:=G.2;;
gap> K:=Subgroup(G,[a]);; H:=Subgroup(G,[]);; 
gap> QG:=GroupRing(Rationals,G);;
gap> FG:=GroupRing(GF(7),G);;
gap> SimpleAlgebraByStronglySP(QG,K,H);
<crossed product over CF(16), with 2 generators>
gap> SimpleAlgebraByStronglySPInfo(QG,K,H);
[ 1, 16, [ [ 2, 7, 8 ] ], [  ] ]
gap> SimpleAlgebraByStronglySPInfo(FG,K,H,[1,7]);
[ 2, 7 ]
gap> SimpleAlgebraByStronglySPInfo(FG,K,H,1);
[ 2, 7 ]
]]>
</Example>


</Section>

</Chapter>

<!-- ********************SSP******************** -->

<Chapter Label="SSP">
<Heading>Strongly Shoda pairs</Heading>

<Section Label="SSPSSP">
<Heading>Computing strongly Shoda pairs</Heading>

<ManSection>
   <Attr Name="StronglyShodaPairs" 
         Arg="G"  
         Comm="A list of representatives of strongly Shoda pairs which realize the Wedderburn components of QG 
         realized by strongly Shoda pairs" />
   <Returns>
         A list of pairs of subgroups of the input
   </Returns>
   <Description>
         Computes a list <M>ssp</M> of strongly Shoda pairs of the finite group <M>G</M> given as input 
         such that every Wedderburn component of the rational group algebra <M>QG</M> over <M>G</M> realizable 
         by a strongly Shoda pair is realizable by one member of <M>ssp</M> (see <Ref Sect="SSPDef" />). <P/>
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> StronglyShodaPairs(SymmetricGroup(4));
[ [ Sym( [ 1 .. 4 ] ), Group([ (1,4)(2,3), (1,3)(2,4), (2,4,3), (3,4) ]) ],
  [ Sym( [ 1 .. 4 ] ), Group([ (1,4)(2,3), (1,3)(2,4), (2,4,3) ]) ],
  [ Group([ (3,4), (1,3,2,4) ]), Group([ (1,3,2,4), (1,2)(3,4) ]) ],
  [ Group([ (1,3,2,4), (3,4) ]), Group([ (3,4), (1,2)(3,4) ]) ],
  [ Group([ (2,4,3), (1,4)(2,3) ]), Group([ (1,4)(2,3), (1,3)(2,4) ]) ] ]
gap> StronglyShodaPairs(SmallGroup(78,1));
[ [ <pc group of size 78 with 3 generators>, Group([ f3, f2, f1 ]) ],
  [ <pc group of size 78 with 3 generators>, Group([ f3, f2 ]) ],
  [ <pc group of size 78 with 3 generators>, Group([ f3, f1 ]) ],
  [ <pc group of size 78 with 3 generators>, Group([ f3 ]) ],
  [ Group([ f3 ]), Group([  ]) ] ]
]]>
</Example>

</Section>

<Section Label="IsSSP">
<Heading>Booleans on Shoda pairs</Heading>

<ManSection>
   <Oper Name="IsStronglyShodaPair" 
         Arg="G K H"  
         Comm="Is (K,H) a strongly Shoda pair of G?" />
   <Returns>
         Boolean.
   </Returns>         
   <Description>
         Returns <E>true</E> if <M>(K,H)</M> is a strongly Shoda pair of <M>G</M> and 
         <E>false</E> otherwise <Ref Sect="SSPDef" />.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=SymmetricGroup(3);K:=Group([(1,2,3)]);H:=Group( () );
Sym( [ 1 .. 3 ] )
Group([ (1,2,3) ])
Group(())
gap> IsStronglyShodaPair(G,K,H);
true
gap> IsStronglyShodaPair(G,G,H);
false
gap> IsStronglyShodaPair(G,K,K);
false
gap> IsStronglyShodaPair(G,G,K);
true
]]>
</Example>


<ManSection>
   <Oper Name="IsShodaPair" 
         Arg="G K H"  
         Comm="Is (K,H) a Shoda pair of G?" />
   <Description>
        Returns <E>true</E> if <M>(K,H)</M> is a Shoda pair of <M>G</M> and 
        <E>false</E> otherwise <Ref Sect="SSPDef" />.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=AlternatingGroup(5);
Alt( [ 1 .. 5 ] )
gap> K:=AlternatingGroup(4);
Alt( [ 1 .. 4 ] )
gap> H := Group([(1,2)(3,4),(1,3)(2,4)]);
Group([ (1,2)(3,4), (1,3)(2,4) ])
gap> IsStronglyShodaPair( G, K, H);
false
gap> IsShodaPair(G,K,H);
true
]]>
</Example>

Every strongly Shoda pair is a Shoda pair but the converse is not true.

<ManSection>
   <Oper Name="IsStronglyMonomial" 
         Arg="G"  
         Comm="Is every Wedderburn component realizable by a SSP" />
   <Description>
        Returns <E>true</E> if the finite group <M>G</M> is strongly monomial, that is
        if every Wedderburn component of the rational group algebra
        is realizable by a strongly Shoda pair <Ref Sect="SSPDef" />.
        In that case also every Wedderburn component of a semisimple finite group algebra
        over <M>G</M> is also realizable by a strongly Shoda pair together with
        a cyclotomic class <Ref Sect="CyclotomicClass" />.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> S4:=SymmetricGroup(4);
Sym( [ 1 .. 4 ] )
gap> IsStronglyMonomial(S4);
true
gap> G:=SmallGroup(24,3);
<pc group of size 24 with 4 generators>
gap> IsStronglyMonomial(G);
false
gap> IsMonomial(G);
false
gap> G:=SmallGroup(1000,86);
<pc group of size 1000 with 6 generators>
gap> IsMonomial(G);
true
gap> IsStronglyMonomial(G);
false
]]>
</Example>

Every strongly monomial finite group is monomial. 
Every abelian-by-supersolvable or metabelian finite group is strongly monomial. 
Every monomial group of order less than 1000 is strongly monomial, but there is one
monomial group of order 1000 which is not strongly monomial.

</Section>

</Chapter>


<!-- ********************idempot******************** -->

<Chapter Label="Idemp">
<Heading>Idempotents</Heading>



<Section Label="IdempotIrr">
<Heading>Computing idempotents from character table</Heading>


<ManSection>
   <Oper Name="PrimitiveCentralIdempotentsByCharacterTable" 
         Arg="QG"  
         Comm="PCI Using the Character Table" />
   <Returns>
         a list of group algebra elements
   </Returns>         
   <Description>
         Returns the list of primitive central idempotents of a rational group 
         algebra <M>QG</M> of a finite group <M>G</M> by using the formula by
         using the method explained in <Ref Sect="IdempotIrr" />
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> QD8 := GroupRing( Rationals, DihedralGroup(8));
<algebra-with-one over Rationals, with 3 generators>
gap> PrimitiveCentralIdempotentsByCharacterTable( QD8 );
[ (1/8)*<identity> of ...+(-1/8)*f1+(-1/8)*f2+(1/8)*f3+(1/8)*f1*f2+(-1/
    8)*f1*f3+(-1/8)*f2*f3+(1/8)*f1*f2*f3, (1/8)*<identity> of ...+(-1/8)*f1+(
    1/8)*f2+(1/8)*f3+(-1/8)*f1*f2+(-1/8)*f1*f3+(1/8)*f2*f3+(-1/8)*f1*f2*f3,
  (1/8)*<identity> of ...+(1/8)*f1+(-1/8)*f2+(1/8)*f3+(-1/8)*f1*f2+(1/
    8)*f1*f3+(-1/8)*f2*f3+(-1/8)*f1*f2*f3, (1/8)*<identity> of ...+(1/8)*f1+(
    1/8)*f2+(1/8)*f3+(1/8)*f1*f2+(1/8)*f1*f3+(1/8)*f2*f3+(1/8)*f1*f2*f3,
  (1/2)*<identity> of ...+(-1/2)*f3 ]
]]>
</Example>

<ManSection>
   <Oper Name="IsCompleteSetOfPCIs" 
         Arg="R l"  
         Comm="Is Complete Set Of PCIs" />
   <Returns>
         Boolean.
   </Returns>         
   <Description>
          Returns <E>true</E> if the elements of the second input data is a list 
          of idempotents in the first input data, which should be a ring, whose 
          sum is <M>1</M>.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> QS5 := GroupRing( Rationals, SymmetricGroup(5) );
<algebra-with-one over Rationals, with 2 generators>
gap> idemp := PrimitiveCentralIdempotentsByCharacterTable( QS5 );;
gap> Length(idemp);
7
gap> IsCompleteSetOfPCIs( QS5, idemp );
true
]]>
</Example>


</Section>



<!-- ********************************************************* -->


<Section Label="IdempotShoda">
<Heading>Idempotents from Shoda pairs</Heading>



<ManSection>
   <Attr Name="PrimitiveCentralIdempotentsByStronglySP( FG )" 
         Arg="FG"  
         Comm="The PCIs realizable by SSPs" />
   <Returns>
         a list of group algebra elements
   </Returns>         
   <Description>
         The input <M>FG</M> should be the group algebra of a finite group <M>G</M>
         with coefficients in <M>F</M> where <M>F</M> is either <M>Q</M>, the field of rational 
         numbers, or a finite field of order <M>q</M>, coprime with the order of <M>G</M>. <P/>
         
         If <M>F=Q</M> then the output is the list of primitive central idempotents of the group 
         algebra <M>FG</M> realizable by strongly Shoda pairs of <M>G</M> <Ref Sect="SSPDef" />. <P/>
         
         If <M>F</M> is a finite field then the output is the list of primitive central idempotents 
         of <M>FG</M> realizable by strongly Shoda pairs <M>(K,H)</M> of <M>G</M> and 
         <M>q</M>-cyclotomic classes module the index of <M>H</M> in <M>K</M> 
         <Ref Sect="CyclotomicClass" />. <P/>
         
         If the list of primitive central idempotents given by the output is not complete then a
         warning sentence is displayed.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=Group([(1,2,3)]); FG:=GroupRing(GF(2),G);
Group([ (1,2,3) ])
<algebra-with-one over GF(2), with 1 generators>
gap> idem:=PrimitiveCentralIdempotentsByStronglySP(FG);
[ (Z(2)^0)*()+(Z(2)^0)*(1,2,3)+(Z(2)^0)*(1,3,2),
  (Z(2)^0)*(1,2,3)+(Z(2)^0)*(1,3,2) ]
gap> IsCompleteSetOfPCIs(FG,idem);
true
gap>
gap> G:=SmallGroup(48,28);QG:=GroupRing(Rationals,G);
<pc group of size 48 with 5 generators>
<algebra-with-one over Rationals, with 5 generators>
gap> PrimitiveCentralIdempotentsByStronglySP(QG);;
Warning!!
The output is a NON-COMPLETE list of prim. central idemp.s of the input!
]]>
</Example>


<ManSection>
   <Func Name="PrimitiveCentralIdempotentsBySP( QG )" 
         Arg="QG"  
         Comm="The list of primitive central idempotents of QG realizable by Shoda pairs" />
   <Returns>
         a list of group algebra elements 
   </Returns>         
   <Description>
          Returns a list containing all the primitive central idempotents of the rational group 
          algebra <M>QG</M> given of the finite group <M>G</M> realizable by Shoda pairs 
          <Ref Sect="SPDef" />. <P/>
          
          The output contains the output of <E>PrimitiveCentralIdempotentsByStronglySP(QG)</E>. <P/>
          
          The sum of the elements of the output  obtained is 1 if and only if G is monomial. <P/>

   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G := SmallGroup(39,2); QG := GroupRing( Rationals, G);
<pc group of size 39 with 2 generators>
<algebra-with-one over Rationals, with 2 generators>
gap> idemp := PrimitiveCentralIdempotentsBySP( QG );
[ (1/39)*<identity> of ...+(1/39)*f1+(1/39)*f2+(1/39)*f1^2+(1/39)*f1*f2+(1/
    39)*f2^2+(1/39)*f1^2*f2+(1/39)*f1*f2^2+(1/39)*f2^3+(1/39)*f1^2*f2^2+(1/
    39)*f1*f2^3+(1/39)*f2^4+(1/39)*f1^2*f2^3+(1/39)*f1*f2^4+(1/39)*f2^5+(1/
    39)*f1^2*f2^4+(1/39)*f1*f2^5+(1/39)*f2^6+(1/39)*f1^2*f2^5+(1/39)*f1*f2^6+(
    1/39)*f2^7+(1/39)*f1^2*f2^6+(1/39)*f1*f2^7+(1/39)*f2^8+(1/39)*f1^2*f2^7+(
    1/39)*f1*f2^8+(1/39)*f2^9+(1/39)*f1^2*f2^8+(1/39)*f1*f2^9+(1/39)*f2^10+(1/
    39)*f1^2*f2^9+(1/39)*f1*f2^10+(1/39)*f2^11+(1/39)*f1^2*f2^10+(1/39)*f1*f2^
    11+(1/39)*f2^12+(1/39)*f1^2*f2^11+(1/39)*f1*f2^12+(1/39)*f1^2*f2^12,
  (2/39)*<identity> of ...+(-1/39)*f1+(2/39)*f2+(-1/39)*f1^2+(-1/39)*f1*f2+(2/
    39)*f2^2+(-1/39)*f1^2*f2+(-1/39)*f1*f2^2+(2/39)*f2^3+(-1/39)*f1^2*f2^2+(
    -1/39)*f1*f2^3+(2/39)*f2^4+(-1/39)*f1^2*f2^3+(-1/39)*f1*f2^4+(2/39)*f2^5+(
    -1/39)*f1^2*f2^4+(-1/39)*f1*f2^5+(2/39)*f2^6+(-1/39)*f1^2*f2^5+(-1/
    39)*f1*f2^6+(2/39)*f2^7+(-1/39)*f1^2*f2^6+(-1/39)*f1*f2^7+(2/39)*f2^8+(-1/
    39)*f1^2*f2^7+(-1/39)*f1*f2^8+(2/39)*f2^9+(-1/39)*f1^2*f2^8+(-1/39)*f1*f2^
    9+(2/39)*f2^10+(-1/39)*f1^2*f2^9+(-1/39)*f1*f2^10+(2/39)*f2^11+(-1/39)*f1^
    2*f2^10+(-1/39)*f1*f2^11+(2/39)*f2^12+(-1/39)*f1^2*f2^11+(-1/39)*f1*f2^
    12+(-1/39)*f1^2*f2^12, (4/13)*<identity> of ...+(4/13)*f1+(-1/39)*f2+(4/
    13)*f1^2+(-1/39)*f1*f2+(-1/39)*f2^2+(-1/39)*f1^2*f2+(-1/39)*f1*f2^2+(-1/
    39)*f2^3+(-1/39)*f1^2*f2^2+(-1/39)*f1*f2^3+(-1/39)*f2^4+(-1/39)*f1^2*f2^
    3+(-1/39)*f1*f2^4+(-1/39)*f2^5+(-1/39)*f1^2*f2^4+(-1/39)*f1*f2^5+(-1/
    39)*f2^6+(-1/39)*f1^2*f2^5+(-1/39)*f1*f2^6+(-1/39)*f2^7+(-1/39)*f1^2*f2^
    6+(-1/39)*f1*f2^7+(-1/39)*f2^8+(-1/39)*f1^2*f2^7+(-1/39)*f1*f2^8+(-1/
    39)*f2^9+(-1/39)*f1^2*f2^8+(-1/39)*f1*f2^9+(-1/39)*f2^10+(-1/39)*f1^2*f2^
    9+(-1/39)*f1*f2^10+(-1/39)*f2^11+(-1/39)*f1^2*f2^10+(-1/39)*f1*f2^11+(-1/
    39)*f2^12+(-1/39)*f1^2*f2^11+(-1/39)*f1*f2^12+(-1/39)*f1^2*f2^12,
  (8/13)*<identity> of ...+(-4/13)*f1+(-2/39)*f2+(-4/13)*f1^2+(1/39)*f1*f2+(
    -2/39)*f2^2+(1/39)*f1^2*f2+(1/39)*f1*f2^2+(-2/39)*f2^3+(1/39)*f1^2*f2^2+(
    1/39)*f1*f2^3+(-2/39)*f2^4+(1/39)*f1^2*f2^3+(1/39)*f1*f2^4+(-2/39)*f2^5+(
    1/39)*f1^2*f2^4+(1/39)*f1*f2^5+(-2/39)*f2^6+(1/39)*f1^2*f2^5+(1/39)*f1*f2^
    6+(-2/39)*f2^7+(1/39)*f1^2*f2^6+(1/39)*f1*f2^7+(-2/39)*f2^8+(1/39)*f1^
    2*f2^7+(1/39)*f1*f2^8+(-2/39)*f2^9+(1/39)*f1^2*f2^8+(1/39)*f1*f2^9+(-2/
    39)*f2^10+(1/39)*f1^2*f2^9+(1/39)*f1*f2^10+(-2/39)*f2^11+(1/39)*f1^2*f2^
    10+(1/39)*f1*f2^11+(-2/39)*f2^12+(1/39)*f1^2*f2^11+(1/39)*f1*f2^12+(1/
    39)*f1^2*f2^12 ]
gap> IsCompleteSetOfPCIs( QG, idemp );
true
]]>
</Example>

If the list of primitive central idempotents gives as output is not complete
then a warning message is displayed. 

<Example>
<![CDATA[
gap> G := SmallGroup(48,28); QG:=GroupRing( Rationals, G);
<pc group of size 48 with 5 generators>
<algebra-with-one over Rationals, with 5 generators>
gap> Length( PrimitiveCentralIdempotentsByStronglySP( QG ) );
Wedderga: Warning!!
The output is a NON-COMPLETE list of prim. central idemp.s of the input!
5
gap> Length( PrimitiveCentralIdempotentsBySP( QG ) );
Wedderga: Warning!!
The output is a NON-COMPLETE list of prim. central idemp.s of the input!
6
]]>
</Example>

The output of <E>PrimitiveCentralIdempotentsByStronglySP( QG )</E> contains the 
output of <E>PrimitiveCentralIdempotentsByStronglySP( QG )</E>, possibly 
properly as the previous example shows.

<ManSection>
   <Oper Name="PrimitiveCentralIdempotentBySP" 
         Arg="QG K H"  
         Comm="e(G,K,H)" />
   <Returns>
         an element of a group algebra
   </Returns>         
   <Description>
         Returns the primitive central idempotent realized by a Shoda pair 
         <M>(K,H)</M> of <M>G</M> <Ref Sect="SPDef" />.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=AlternatingGroup(5);
Alt( [ 1 .. 5 ] )
gap> K:=AlternatingGroup(4);
Alt( [ 1 .. 4 ] )
gap> H := Group([(1,2)(3,4),(1,3)(2,4)]);
Group([ (1,2)(3,4), (1,3)(2,4) ])
gap> QG := GroupRing( Rationals, G);
<algebra-with-one over Rationals, with 2 generators>
gap> PrimitiveCentralIdempotentBySP( QG, K, H);
(5/12)*()+(-1/12)*(3,4,5)+(-1/12)*(3,5,4)+(1/12)*(2,3)(4,5)+(-1/12)*(2,3,4)+(
-1/12)*(2,3,5)+(-1/12)*(2,4,3)+(-1/12)*(2,4,5)+(1/12)*(2,4)(3,5)+(-1/12)*
(2,5,3)+(-1/12)*(2,5,4)+(1/12)*(2,5)(3,4)+(1/12)*(1,2)(4,5)+(1/12)*(1,2)
(3,4)+(1/12)*(1,2)(3,5)+(-1/12)*(1,2,3)+(-1/12)*(1,2,4)+(-1/12)*(1,2,5)+(-1/
12)*(1,3,2)+(1/12)*(1,3)(4,5)+(-1/12)*(1,3,4)+(-1/12)*(1,3,5)+(1/12)*(1,3)
(2,4)+(1/12)*(1,3)(2,5)+(-1/12)*(1,4,2)+(-1/12)*(1,4,3)+(-1/12)*(1,4,5)+(1/
12)*(1,4)(3,5)+(1/12)*(1,4)(2,3)+(1/12)*(1,4)(2,5)+(-1/12)*(1,5,2)+(-1/12)*
(1,5,3)+(-1/12)*(1,5,4)+(1/12)*(1,5)(3,4)+(1/12)*(1,5)(2,3)+(1/12)*(1,5)(2,4)
]]>
</Example>


</Section>

<!-- ********************************************************* -->

<Section Label="IdempotSubgroups">
<Heading>Idempotents determined by subgroups</Heading>


<ManSection>
   <Oper Name="IdempotentBySubgroups" 
         Arg="QG K H"  
         Comm="Epsilon(QG,K,H)" />
   <Oper Name="IdempotentBySubgroups" 
         Arg="FG K H c"  
         Comm="Epsilon(G,K,H,C)" />
   <Returns>
         idempotent of a group algebra
   </Returns>         
   <Description>
        The versions with three input data computes <M>\varepsilon(K,H)</M>
        as an element of the rational group algebra <M>QG</M>, where <M>K</M>
        is a subgroup of <M>G</M> and <M>H</M> is a normal subgroup of <M>K</M>. 
        (see Section <Ref Sect="IdempotentsSbgps"/>). <P/>
                 
        The versions with three input data computes <M>\varepsilon_C(K,H)</M>
        as an element of the group algebra <M>FG</M>, where <M>F</M> is a finite 
        field of order <M>q</M> and <M>G</M> is a finite group of order coprime 
        with <M>q</M>. Moreover <M>K</M> should be a subgroup of <M>G</M>, 
        <M>H</M> a normal subgroup of <M>K</M>  such that <M>K/H</M> is cyclic 
        and <M>C</M> is a <M>q</M>-cyclotomic class module <M>[K:H]</M> 
        (see Section <Ref Sect="CyclotomicClass"/>).
        The cyclotomic class can be given either by the cyclotomic class itself 
        or by a representative, that is an integer.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=SymmetricGroup(5);
Sym( [ 1 .. 5 ] )
gap> K:=Group([(1,2,3,4)]);
Group([ (1,2,3,4) ])
gap> H:=Group( () );
Group(())
gap> FG:=GroupRing(GF(7),G);
<algebra-with-one over GF(7), with 2 generators>
gap> QG:=GroupRing(Rationals,G);
<algebra-with-one over Rationals, with 2 generators>
gap> IdempotentBySubgroups(QG,K,H);
(1/2)*()+(-1/2)*(1,3)(2,4)
gap> IdempotentBySubgroups(FG,K,H,1);
(Z(7)^4)*()+(Z(7))*(1,3)(2,4)
gap> IdempotentBySubgroups(FG,K,H,[1,3]);
(Z(7)^4)*()+(Z(7))*(1,3)(2,4)
gap> IdempotentBySubgroups(FG,K,H,[1]);
Error, Wedderga:
 <C> should be a cyclotomic class module the index of <H> on <K>
 called from
<function>( <arguments> ) called from read-eval-loop
Entering break read-eval-print loop ...
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk>
]]>
</Example>


The output of <E>IdempotentBySubgroups</E> is an idempotent in the corresponding group algebra.

<ManSection>
   <Oper Name="CentralElementBySubgroups" 
         Arg="QG K H"  
         Comm="" />
   <Oper Name="CentralElementBySubgroups" 
         Arg="FG K H c"  
         Comm="" />
   <Returns>
         central element of a group algebra
   </Returns>         
   <Description>
          The versions with three input data computes <M>e(G,K,H)</M>
          as an element of the rational group algebra <M>QG</M>, where <M>K</M>
          is a subgroup of <M>G</M> and <M>H</M> is a normal subgroup of <M>K</M>. 
          (see Section <Ref Sect="SPDef"/>). <P/>
                   
          The versions with three input data computes <M>e_C(G,K,H)</M>
          as an element of the group algebra <M>FG</M>, where <M>F</M> is a finite 
          field of order <M>q</M> and <M>G</M> is a finite group of order coprime 
          with <M>q</M>. Moreover <M>K</M> should be a subgroup of <M>G</M>, 
          <M>H</M> a normal subgroup of <M>K</M> such that <M>K/H</M> is cyclic 
          and <M>C</M> is a <M>q</M>-cyclotomic class module <M>[K:H]</M> 
          (see Section <Ref Sect="CyclotomicClass"/>). 
          The cyclotomic class can be given either by the cyclotomic class itself 
          or by a representative, that is an integer.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=SymmetricGroup(5);
Sym( [ 1 .. 5 ] )
gap> K:=Group([(1,2,3,4)]);
Group([ (1,2,3,4) ])
gap> H:=Group( () );
Group(())
gap> FG:=GroupRing(GF(7),G);
<algebra-with-one over GF(7), with 2 generators>
gap> QG:=GroupRing(Rationals,G);
<algebra-with-one over Rationals, with 2 generators>
gap> CentralElementBySubgroups(QG,K,H);
(15/2)*()+(-1/2)*(2,3)(4,5)+(-1/2)*(2,4)(3,5)+(-1/2)*(2,5)(3,4)+(-1/2)*(1,2)
(4,5)+(-1/2)*(1,2)(3,4)+(-1/2)*(1,2)(3,5)+(-1/2)*(1,3)(4,5)+(-1/2)*(1,3)
(2,4)+(-1/2)*(1,3)(2,5)+(-1/2)*(1,4)(3,5)+(-1/2)*(1,4)(2,3)+(-1/2)*(1,4)
(2,5)+(-1/2)*(1,5)(3,4)+(-1/2)*(1,5)(2,3)+(-1/2)*(1,5)(2,4)
gap> CentralElementBySubgroups(FG,K,H,1);
(Z(7)^4)*()+(Z(7))*(2,3)(4,5)+(Z(7))*(2,4)(3,5)+(Z(7))*(2,5)(3,4)+(Z(7))*(1,2)
(4,5)+(Z(7))*(1,2)(3,4)+(Z(7))*(1,2)(3,5)+(Z(7))*(1,3)(4,5)+(Z(7))*(1,3)
(2,4)+(Z(7))*(1,3)(2,5)+(Z(7))*(1,4)(3,5)+(Z(7))*(1,4)(2,3)+(Z(7))*(1,4)
(2,5)+(Z(7))*(1,5)(3,4)+(Z(7))*(1,5)(2,3)+(Z(7))*(1,5)(2,4)
gap> CentralElementBySubgroups(FG,K,H,[1,3]);
(Z(7)^4)*()+(Z(7))*(2,3)(4,5)+(Z(7))*(2,4)(3,5)+(Z(7))*(2,5)(3,4)+(Z(7))*(1,2)
(4,5)+(Z(7))*(1,2)(3,4)+(Z(7))*(1,2)(3,5)+(Z(7))*(1,3)(4,5)+(Z(7))*(1,3)
(2,4)+(Z(7))*(1,3)(2,5)+(Z(7))*(1,4)(3,5)+(Z(7))*(1,4)(2,3)+(Z(7))*(1,4)
(2,5)+(Z(7))*(1,5)(3,4)+(Z(7))*(1,5)(2,3)+(Z(7))*(1,5)(2,4)
gap> CentralElementBySubgroups(FG,K,H,[1]);
Error, Wedderga:
<C> should be a cyclotomic class module the index of <H> on <K>
 called from
<function>( <arguments> ) called from read-eval-loop
Entering break read-eval-print loop ...
you can 'quit;' to quit to outer loop, or
you can 'return;' to continue
brk>
]]>
</Example>

The output of <E>CentralElementBySubgroups</E> is central in the corresponding group algebra.
If some additional conditions are satisfied then it is also an idempotent but in general 
it could be not idempotent. For example this is the case if <M>(K,H)</M> is a strongly
Shoda pair of <M>G</M>.

</Section>



</Chapter>

<!-- ********************idempot******************** -->

<Chapter Label="Crossed">
<Heading>Crossed products</Heading>

<Section Label="CrossedCrossed">
<Heading>Crossed products</Heading>


<ManSection>
   <Attr Name="CrossedProduct" 
         Arg="K G action twisting"  
         Comm="" />
   <Returns>
         ???
   </Returns>
   <Description>
         Description
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> GAP command;
GAP output      
]]>
</Example>

</Section>

</Chapter>


<!-- ********************auxiliar******************** -->

<!-- $Id$ -->
<Chapter Label="Auxiliar">
<Heading>Useful properties and functions</Heading>

<Section Label="AuxiliarProperties">
<Heading>Semisimple group algebras</Heading>


<ManSection>
   <Prop Name="IsSemisimpleRationalGroupAlgebra" 
         Arg="KG"  
         Comm="Is rational group algebra of finite group?" />
   <Description>
         Returns <E>true</E> if <M>KG</M> is the rational group algebra of a finite 
         group and <E>false</E> if it is another kind of group ring.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=DihedralGroup(128);
<pc group of size 128 with 7 generators>
gap> QG:=GroupRing( Rationals, G);
<algebra-with-one over Rationals, with 7 generators>
gap> CG := GroupRing( GaussianRationals, G);
<algebra-with-one over GaussianRationals, with 7 generators>
gap> F2G := GroupRing( GF(2), G);
<algebra-with-one over GF(2), with 7 generators>
gap> F3G := GroupRing( GF(3), G);
<algebra-with-one over GF(3), with 7 generators>
gap> IsSemisimpleRationalGroupAlgebra(QG);
true
gap> IsSemisimpleRationalGroupAlgebra(CG);
false
gap> IsSemisimpleRationalGroupAlgebra(F2G);
false
]]>
</Example>


<ManSection>
   <Prop Name="IsSemisimpleFiniteGroupAlgebra" 
         Arg="KG"  
         Comm="Is rational group algebra of finite group?" />
   <Description>
         Returns <E>true</E> if <M>KG</M> is a semisimple finite group algebra, 
         that is a group algebra of a finite group <M>G</M> with coefficients on 
         a field of order coprime with the order of <M>G</M>, and <E>false</E> 
         if it is another type of group ring.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=DihedralGroup(128);
<pc group of size 128 with 7 generators>
gap> QG:=GroupRing( Rationals, G);
<algebra-with-one over Rationals, with 7 generators>
gap> F2G := GroupRing( GF(2), G);
<algebra-with-one over GF(2), with 7 generators>
gap> F3G := GroupRing( GF(3), G);
<algebra-with-one over GF(3), with 7 generators>
gap> IsSemisimpleFiniteGroupAlgebra(F2G);
false
gap> IsSemisimpleFiniteGroupAlgebra(FG);
true
brk> quit;
gap> IsSemisimpleFiniteGroupAlgebra(QG);
false
]]>
</Example>


</Section>


<Section Label="AuxiliarOperations">
<Heading>Operations over group rings elements</Heading>


<ManSection>
   <Oper Name="Centralizer" 
         Arg="G a"  
         Comm="Centralizer on a subgroup of a group ring element in " />
   <Returns>
         a subgroup of a group <M>G</M>.
   </Returns>         
   <Description>
         Returns the centralizer of an element <M>a</M> of a group ring <M>FH</M> 
         in a subgroup <M>G</M> of the underlying group <M>H</M> of <M>FH</M>.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=SymmetricGroup(5);
Sym( [ 1 .. 5 ] )
gap> K:=Group([(1,2,3,4)]);
Group([ (1,2,3,4) ])
gap> H:=Group( () );
Group(())
gap> QG:=GroupRing(Rationals,G);
<algebra-with-one over Rationals, with 2 generators>
gap> e:=IdempotentBySubgroups(QG,K,H);
(1/2)*()+(-1/2)*(1,3)(2,4)
gap> S4:=SymmetricGroup(4);
Sym( [ 1 .. 4 ] )
gap> Centralizer(S4,e);
Group([ (2,4), (1,2)(3,4) ])
]]>
</Example>


<ManSection>
   <Oper Name="OnPoints" 
         Arg="x g"  
         Comm="Conjugate of x by g" />
   <Oper Name="\^" 
         Arg="x g"  
         Comm="Conjugate of x by g" />
   <Returns>
         an element of a group ring
   </Returns>         
   <Description>
         Returns the conjugate <M>a^g = g^{-1} a g</M> of <M>a</M> by <M>g</M>
         where <M>a</M> is an element of a group ring <M>FG</M> and <M>g</M> is an 
         element of the underlying group <M>G</M>. <P/>
                  
         <E>a^g</E> produces the same output.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=AlternatingGroup(5); QG:=GroupRing(Rationals,G);
Alt( [ 1 .. 5 ] )
<algebra-with-one over Rationals, with 2 generators>
gap> a:=Random(QG);
(-1/2)*()+(1)*(3,4,5)+(1)*(3,5,4)+(1)*(2,3)(4,5)+(-1/5)*(2,3,4)+(-2)*(2,3,5)+(
1/2)*(2,4,3)+(2)*(2,4,5)+(-3/2)*(2,4)(3,5)+(1)*(2,5,4)+(1/5)*(2,5)(3,4)+(1/2)*
(1,2)(4,5)+(3)*(1,2)(3,4)+(-4)*(1,2)(3,5)+(1)*(1,2,3)+(3)*(1,2,3,4,5)+(1)*
(1,2,3,5,4)+(-1/3)*(1,2,4,5,3)+(3)*(1,2,4)+(-1)*(1,2,4,3,5)+(-2)*(1,2,5)+(1/
2)*(1,2,5,3,4)+(-2)*(1,3,2)+(-3/2)*(1,3,4,5,2)+(1)*(1,3,5,4,2)+(-1/2)*(1,3)
(4,5)+(1/5)*(1,3,4)+(1)*(1,3,5)+(1/3)*(1,3)(2,4)+(5/6)*(1,3,2,4,5)+(2)*
(1,3,5,2,4)+(1/2)*(1,3)(2,5)+(1/3)*(1,3,2,5,4)+(-1/2)*(1,3,4,2,5)+(3/2)*
(1,4,2)+(2)*(1,4,3,5,2)+(-3)*(1,4,3)+(2)*(1,4,5)+(-1)*(1,4,5,2,3)+(-1)*(1,4)
(2,3)+(2/5)*(1,4,2,3,5)+(1)*(1,4,2,5,3)+(-2)*(1,4,3,2,5)+(1/3)*(1,4)(2,5)+(1/
4)*(1,5,2)+(1/3)*(1,5,3,4,2)+(-1/2)*(1,5,3)+(-3/2)*(1,5,4)+(1)*(1,5)(3,4)+(5)*
(1,5,4,2,3)+(1/2)*(1,5)(2,3)+(-1)*(1,5,2,4,3)+(1/2)*(1,5,3,2,4)+(1)*(1,5)(2,4)
gap> a^(1,2,3);
(-1/2)*()+(2)*(3,4,5)+(1)*(3,5,4)+(1/2)*(2,3)(4,5)+(3)*(2,3,4)+(-2)*(2,3,5)+(
3/2)*(2,4,3)+(2)*(2,4,5)+(1/3)*(2,4)(3,5)+(1/4)*(2,5,3)+(-3/2)*(2,5,4)+(1)*
(2,5)(3,4)+(-1/2)*(1,2)(4,5)+(1/3)*(1,2)(3,4)+(1/2)*(1,2)(3,5)+(1)*(1,2,3)+(
-1/3)*(1,2,3,4,5)+(-1)*(1,2,4,5,3)+(-3)*(1,2,4)+(1)*(1,2,4,3,5)+(5)*
(1,2,5,4,3)+(-1/2)*(1,2,5)+(-1)*(1,2,5,3,4)+(-2)*(1,3,2)+(5/6)*(1,3,4,5,2)+(1/
3)*(1,3,5,4,2)+(1)*(1,3)(4,5)+(1/2)*(1,3,4)+(-1)*(1,3)(2,4)+(-2)*(1,3,5,2,4)+(
1/2)*(1,3)(2,5)+(1/2)*(1,3,4,2,5)+(-3/2)*(1,4,5,3,2)+(1/5)*(1,4,2)+(-1/2)*
(1,4,3,5,2)+(-1/5)*(1,4,3)+(1)*(1,4,5)+(1/5)*(1,4)(3,5)+(3)*(1,4,5,2,3)+(3)*
(1,4)(2,3)+(1/2)*(1,4,2,3,5)+(1/3)*(1,4,3,2,5)+(1)*(1,4)(2,5)+(1)*
(1,5,4,3,2)+(1)*(1,5,2)+(2)*(1,5,3,4,2)+(-2)*(1,5,3)+(1)*(1,5,4)+(-3/2)*(1,5)
(3,4)+(1)*(1,5,4,2,3)+(-4)*(1,5)(2,3)+(-1)*(1,5,2,3,4)+(2/5)*(1,5,2,4,3)+(2)*
(1,5,3,2,4)
gap> OnPoints(a,(1,2)(3,4));
(-1/2)*()+(1)*(3,4,5)+(1)*(3,5,4)+(-3)*(2,3,4)+(2)*(2,3,5)+(1/5)*(2,4,3)+(1)*
(2,4,5)+(-1/2)*(2,4)(3,5)+(-3/2)*(2,5,3)+(-1/2)*(2,5,4)+(1)*(2,5)(3,4)+(-4)*
(1,2)(4,5)+(3)*(1,2)(3,4)+(1/2)*(1,2)(3,5)+(3/2)*(1,2,3)+(2)*(1,2,3,4,5)+(1)*
(1,2,4,5,3)+(-2)*(1,2,4)+(-3/2)*(1,2,4,3,5)+(1/3)*(1,2,5,4,3)+(1/4)*(1,2,5)+(
3)*(1,3,2)+(-1)*(1,3,4,5,2)+(-1/3)*(1,3,5,4,2)+(-3/2)*(1,3)(4,5)+(1/2)*
(1,3,4)+(2)*(1,3,5)+(1/3)*(1,3)(2,4)+(2)*(1,3,2,4,5)+(5/6)*(1,3,5,2,4)+(1)*
(1,3)(2,5)+(1/2)*(1,3,2,5,4)+(-1)*(1,3,4,2,5)+(1)*(1,4,5,3,2)+(1)*(1,4,2)+(3)*
(1,4,3,5,2)+(-1/5)*(1,4,3)+(-2)*(1,4,5)+(1)*(1,4)(3,5)+(2/5)*(1,4,5,2,3)+(-1)*
(1,4)(2,3)+(-1)*(1,4,2,3,5)+(5)*(1,4,2,5,3)+(1/2)*(1,4)(2,5)+(1/2)*
(1,5,4,3,2)+(-2)*(1,5,2)+(1)*(1,5,3)+(1/5)*(1,5)(3,4)+(1)*(1,5,4,2,3)+(1/3)*
(1,5)(2,3)+(-2)*(1,5,2,3,4)+(-1/2)*(1,5,2,4,3)+(1/3)*(1,5,3,2,4)+(1/2)*(1,5)
(2,4)
]]>
</Example>


<ManSection>
   <Oper Name="AverageSum" 
         Arg="FG X"  
         Comm="Sum X/Order X" />
   <Returns>
         an element of a group ring
   </Returns>         
   <Description>
         Returns the element of the group algebra <M>FG</M> obtaining summing
         up the elements of <M>X</M> divided by the order of <M>X</M>, where
         <M>X</M> is a finite subset of the underlying group <M>G</M> of 
         <M>FG</M> whose order is not multiple of the characteristic of the field <M>F</M>.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> G:=DihedralGroup(24);
<pc group of size 24 with 4 generators>
gap> H:=Subgroup(G,[Random(G),Random(G)]);
Group([ f1*f4, f4 ])
gap> QG:=GroupRing(Rationals,G);
<algebra-with-one over Rationals, with 4 generators>
gap> FG:=GroupRing( CF(5), G);
<algebra-with-one over CF(5), with 4 generators>
gap> AverageSum( QG, H);
(1/6)*<identity> of ...+(1/6)*f1+(1/6)*f4+(1/6)*f1*f4+(1/6)*f4^2+(1/6)*f1*f4^2
gap> AverageSum( FG, H);
(1/6)*<identity> of ...+(1/6)*f1+(1/6)*f4+(1/6)*f1*f4+(1/6)*f4^2+(1/6)*f1*f4^2
]]>
</Example>

</Section>


<Section Label="CC">
<Heading>Cyclotomic classes</Heading>

<ManSection>
   <Oper Name="CyclotomicClasses" 
         Arg="q n"  
         Comm="Cyclotomic classes" />
   <Returns>
         a partition of [ 0 .. n ]
   </Returns>          
   <Description>
         Returns the <M>q</M>-cyclotomic classes module <M>n</M>, where <M>q</M>
         and <M>n</M> are relatively prime positive integers. <Ref Sect="CyclotomicClass" />
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> CyclotomicClasses(2,21);
[ [ 0 ], [ 1, 2, 4, 8, 16, 11 ], [ 3, 6, 12 ], [ 5, 10, 20, 19, 17, 13 ],
  [ 7, 14 ], [ 9, 18, 15 ] ]
gap> CyclotomicClasses(10,21);
[ [ 0 ], [ 1, 10, 16, 13, 4, 19 ], [ 2, 20, 11, 5, 8, 17 ],
  [ 3, 9, 6, 18, 12, 15 ], [ 7 ], [ 14 ] ]
]]>
</Example>


<ManSection>
   <Oper Name="IsCyclotomicClass" 
         Arg="q n C"  
         Comm="Is Cyclotomic class" />
   <Returns>
         Boolean
   </Returns>          
   <Description>
      Returns <E>true</E> if <M>C</M> is a <M>q</M>-cyclotomic class module <M>n</M> and
      <E>false</E> otherwise, 
      for <M>q</M> and <M>n</M> relatively prime integers and <M>C</M> a subset of [0 .. n].
      <Ref Sect="CyclotomicClass" />.
   </Description>
</ManSection>

<Example>
<![CDATA[
gap> IsCyclotomicClass(2,7,[1,2,4]);
true
gap> IsCyclotomicClass(2,21,[1,2,4]);
false
gap> IsCyclotomicClass(2,21,[3,6,12]);
true
]]>
</Example>


</Section>

</Chapter>



<!-- ********************theory******************** -->

<Chapter Label="Theory">
<Heading>The basic theory behind &Wedderga;</Heading>    


In this chapter we describe the theory that is behind the algorithms used by
&Wedderga;. 

<Section Label="GroupRings">
<Heading>Group rings and group algebras</Heading>

<Index>group ring</Index>
Let <M>G</M> be a group and <M>R</M> an associative ring. 
Then the <E>group ring</E> <M>RG</M> over the group <M>G</M> with coefficients in <M>R</M> 
is the associative ring whose underlying additive group is a right <M>R-</M>module with basis <M>G</M>
such that the product is defined by 
  <Display> 
  (gr)(hs)=(gh)(rs)
  </Display>
for <M>r,s \in R</M> and <M>g, h \in G</M> and extended to 
<M>RG</M> by linearity.
<P/>

<Index>group algebra</Index>
A <E>group algebra</E> is a group ring in which the coefficient ring is a field.

</Section>

<!-- ********************************************************* -->

<Section Label="CrossedProducts">
<Heading>Crossed Products</Heading>

<Index Key="Crossed Product">Crossed Product</Index>
Let <M>R</M> be an associative ring with identity and <M>G</M> a group. 
A <E>crossed product</E> <Cite Key="P" /> over <M>G</M> with coefficients in <M>R</M>, 
action <M>a</M> and twisting <M>t</M> is an associative ring <M>R*G</M> (also denoted <M>R*_a^t G</M>) 
whose underlying additive group is a <M>R-</M>module with 
basis <M>G</M> such that the product is defined by
  <Display> 
  (gr)(hs)=(gh)(t(g,h)r^h s)
  </Display>
and extended to <M>R*G</M> by linearity,where <P/>
* for every <M>g \in G</M>, the assignement <M>r \mapsto a(g)(r)=r^g</M> is an automorphism of <M>R</M> 
  and <P/>
* <M>t(g,h)</M> is a unit of <M>R</M>, for every <M>g,h \in G</M>. <P/>

The necessary and sufficient conditions for the above product to be associative 
(equivalently define on <M>R*G</M> a crossed product structure) is that the following 
two conditions hold for every <M>g</M>, <M>h</M> and <M>k</M> in <M>G</M>: <P/>

* <M>a(gh)^(-1) a(g) a(h)</M> is the inner automorphism of <M>R</M> induced by <M>t(g,h)</M> and <P/>

* <M>t(gh,k) t(g,h)^k = t(g,hk) t(h,k).</M> <P/>

</Section>

<!-- ********************************************************* -->


<Section Label="Cyclotomic">
<Heading>Classical crossed products and cyclotomic algebras</Heading>

If the group <M>G</M> is the Galois group of a field extension <M>F/E</M> and <M>a</M> is 
the natural action of <M>G</M> on <M>F</M> then the crossed product <M>F*_a^t G</M> is denoted by
<M>(F/E,t)</M> and it is simple <Cite Key="Reiner" />. <P/> 

<Index Key="Cyclotomic algebra">Cyclotomic algebra</Index>
A <E>cyclotomic algebra</E> over <M>F</M> is a crossed product <M>(F(\xi)/F,t)</M>, 
where <M>F</M> is a field, <M>\xi</M> is a root of unity on an extension of <M>F</M> 
and <M>t(g,h)</M> is a root of unity for every <M>g</M> and <M>h</M> in <M>Gal(F(\xi)/F)</M>. <P/>

</Section>


<!-- ********************************************************* -->

<Section Label="WedDec">
<Heading>Wedderburn decomposition</Heading>

A ring <M>R</M> is semisimple artinian if it is a direct sum of simple left (alternatively right) ideals 
or equivalently if <M>R</M> is isomorphic to a direct product of simple algebras each one isomorphic
to a matrix ring over a division ring. <P/>

<Index>Wedderburn decomposition</Index>
<Index>Wedderburn components</Index>
If <M>R</M> is a semisimple ring then the <E>Wedderburn decomposition</E> of <M>R</M> is the 
decomposition of <M>R</M> as a direct product of simple algebras. 
The factors of this Wedderburn decomposition are called <E>Wedderburn components</E> of <M>R</M>. <P/> 

By Maschke's Theorem the group algebra <M>FG</M> is semisimple artinian if and only if the 
group <M>G</M> if finite and the characteristic of the coefficient field <M>F</M> does not divide 
the order of <M>G</M>. <P/>


Let <M>FG</M> be a semisimple group algebra.
Computing the Wedderburn decomposition of an arbitrary semisimple group algebra <M>FG</M> reduces
to the case when <M>F</M> is a prime field, that is <M>F</M> is either the field of rationals or a finite field
of prime order. This is because if <M>K</M> is a subfield of <M>F</M>, then <M>FG</M> is isomorphic to 
<M>F \otimes_{K} FG</M>. 
Moreover if <M>A</M> is a Wedderburn component of <M>KG</M> then <M>F \otimes_{K} A</M> is isomorphic to 
<M>B^n</M> for some Wedderburn component of <M>FG</M>. <P/>

By the <E>Brauer-Witt Theorem</E> <Cite Key="Y" />, the Wedderburn components of <M>FG</M> 
are similar to cyclotomic algebras <Ref Sect="Cyclotomic" />. <P/> 

The main functions of &Wedderga; describes the Wedderburn components of <M>FG</M>
associated to strongly Shoda pairs <Ref Sect="SSPDef" /> of the group <M>G</M>, as matrix algebras
over cyclotomic algebras. 
If the coefficient ring <M>F</M> is finite then these cyclotomic algebras are 
finite extensions of <M>F</M>. 

</Section>

<!-- ********************************************************* -->

<Section Label="Idempotents">
<Heading>Primitive central idempotents</Heading>

<Index>primitive central idempotent</Index>
A <E>primitive central idempotent</E> of a ring <M>R</M> is central idempotent 
<M>e</M> which cannot be written as the sum of two non-zero central idempotents 
of <M>eR</M>, or equivalently such that <M>eR</M> is indecomposable as a direct 
product of two non-trivial two-sided ideals.  <P/>

The <E>Wedderburn components</E> <Ref Sect="WedDec" /> of a semisimple ring 
<M>R</M> are the rings of the form <M>Re</M> for <M>e</M> 
running on the set of primitive central idempotents of <M>R</M>.
<P/>

If <M>FG</M> is a semisimple group algebra with coefficients on an algebraically 
closed field <M>F</M> then there is a one-to-one correspondence between the 
primitive central idempotents of <M>FG</M> and the irreducible characters of 
<M>G</M> over the field <M>F</M>. Namely the primitive central idempotent of 
<M>FG</M> associated with the irreducible character <M>\chi</M> is given by the 
formula:
  <Display>
  e(\chi) = |G|^{-1} \sum_{g\in G} \chi(g\inv) g.
  </Display><P/>
  
If <M>F</M> is an arbitrary field and <M>K</M> is an algebraic closure of <M>F</M>
then there is a surjective (non-necessarily injective) map from the set of
irreducible characters of <M>G</M> over <M>K</M> to the set of primitive central idempotents 
of <M>FG</M> that associates to every irreducible character <M>\chi</M> the sum of 
the primitive central idempotents of the form <M>e(\sigma \chi)</M> where <M>\sigma</M>
runs on the elements of the Galois field of the character field <M>F(\chi)</M> of <M>\chi</M> 
over <M>F</M>. 

</Section>


<!-- ********************************************************* -->

<Section Label="IdempotentsSbgps">
<Heading>Idempotents given by subgroups</Heading>

Let <M>G</M> be a finite group and <M>F</M> a field whose characteristic does not 
divide the order of <M>G</M>.
If <M>H</M> is a subgroup of <M>G</M> then set
<Display>
\widehat{H} = |H|^{-1}\sum_{x \in H} x
</Display>
The element <M>\widehat{H}</M> is an idempotent of <M>FG</M> which is central in <M>FG</M> if and
only if <M>H</M> is normal in <M>G</M>. <P/>

If <M>H</M> is a proper normal subgroup of a subgroup <M>K</M> of  <M>G</M> then set
<Display>
\varepsilon(K,H) = \prod_{L} (\widehat{N}-\widehat{L})
</Display>
where <M>L</M> runs on the minimal normal subgroups of <M>K</M> containing <M>N</M> properly. 
By convention, <M>\varepsilon(K,K)=\widehat{K}</M>. 
The element <M>\varepsilon(K,H)</M> is an idempotent of <M>FG</M>. <P/>

If <M>H</M> and <M>K</M> are subgroups of <M>G</M> such that <M>H</M> is normal in <M>K</M> then 
<M>e(G,K,H)</M> denotes the sum of all different <M>G</M>-conjugates of <M>\varepsilon(K,H)</M>.
The element <M>e(G,K,H)</M> is central in <M>FG</M>. In general it is not an idempotent but if the 
different conjugates of <M>\varepsilon(K,H)</M> are orthogonal then 
<M>e(G,K,H)</M> is a central idempotent of <M>FG</M>.
<P/>

If <M>(K,H)</M> is a Shoda Pair <Ref Sect="SPDef" /> of <M>G</M> then there is a non-zero rational number <M>a</M> 
such that <M>ae(G,K,H))</M> is a primitive central idempotent or the rational group algebra <M>Q G</M>. 
If <M>(K,H)</M> is a strongly Shoda pair <Ref Sect="SSPDef" /> of <M>G</M> then <M>e(G,K,H)</M> is a primitive central 
idempotent of <M>Q G</M>. 
<P/>

Assume now that <M>F</M> is a finite field of order <M>q</M>, <M>(K,H)</M> a strongly Shoda pair of <M>G</M> and 
<M>C</M> a cyclotomic class of <M>K/H</M> <Ref Sect="CyclotomicClass" /> containing a generator of <M>K/H</M>. 
Then <M>e_C(G,K,H)</M> is a primitive central idempotent of <M>F</M>. <P/>

</Section>

<!-- ********************************************************* -->

<Section Label="SPDef">
<Heading>Shoda pairs</Heading>

Let <M>G</M> be a finite group.
<Index>Shoda pair</Index>
A <E>Shoda pair</E> of <M>G</M> is a pair <M>(K,H)</M> of
subgroups of <M>G</M> such that there is a linear character <M>\chi</M> of <M>K</M> with
kernel <M>H</M> such that the induced character <M>\chi^G</M> in <M>G</M> is irreducible.
By <Cite Key="S" /> or <Cite Key="ORS" />, <M>(K,H)</M> is a Shoda pair if and only if the
following conditions hold:<P/>
* <M>H</M> is normal in <M>K</M>, <P/>
* <M>K/H</M> is cyclic and <P/> 
* if <M>(K,g)\cap K \subseteq H</M> for some <M>g \in G</M> then <M>g \in K</M><P/>

<Index>primitive central idempotent realized by a Shoda pair</Index>
If <M>(K,H)</M> is a Shoda pair then the primitive central idempotent of <M>QG</M> associated 
to the irreducible character <M>\chi^G</M> is of the form <M>e=a e(G,K,H)</M> for 
some <M>a \in Q</M> 
<Cite Key="ORS" />. (See <Ref Sect="IdempotentsSbgps" /> for the definition of <M>e(G,K,H)</M>.)
In that case we say that <M>e</M> is the <E>primitive central idempotent realized by the Shoda pair</E> 
<M>(K,H)</M> of <M>G</M>. <P/>

A group <M>G</M> is monomial, that is every irreducible character of <M>G</M> is monomial, if and only if 
every primitive central idempotent of <M>QG</M> is realizable by a Shoda pair of <M>G</M>.
<P/>

</Section>

<!-- ********************************************************* -->

<Section Label="SSPDef">
<Heading>Strongly Shoda pairs</Heading>

<Index>strongly Shoda pair</Index>
A <E>strongly Shoda pair</E> of <M>G</M> is a pair <M>(K,H)</M> of
subgroups of <M>G</M> satisfying the following conditions:<P/>
* <M>H</M> is normal in <M>K</M> and <M>K</M> is normal in the normalizer <M>N</M> of <M>H</M> in 
  <M>G</M>, <P/>
* <M>K/H</M> is cyclic and a maximal abelian subgroup of <M>N/H</M> and <P/>
* for every <M>g \in G\setminus N</M> ,  <M>\varepsilon(K,H)\varepsilon(K,H)^g=0</M>.
(See <Ref Sect="IdempotentsSbgps" /> for the definition of <M>\varepsilon</M>.)
<P/>

Let <M>(K,H)</M> be a strongly Shoda pair of <M>G</M>. Then <M>(K,H)</M> is a Shoda pair of <M>G</M> and the 
primitive central idempotent of <M>QG</M> realized by <M>(K,H)</M> is <M>e(G,K,H)</M>, 
see <Cite Key="ORS" />. 
Moreover the simple algebra <M>QGe(G,K,H)</M> is isomorphic to <M>M_n(Q(\xi)*N/K)</M>, 
where <M>\xi</M> is a <M>[K:H]-</M>th root of unity, <M>N</M> is the normalizer of <M>H</M> in <M>G</M>, 
<M>n=[G:N]</M> and <M>Q(\xi)* N/K</M> is a crossed product <Ref Sect="CrossedProducts" /> 
whose action and twisting <M>t</M> are given as follows: <P/>
Let <M>x</M> be a fixed generator of <M>K/H</M> and 
<M>\phi:N/K\rightarrow N/H</M> a fixed left inverse of the canonical projection 
<M>N/H\rightarrow N/K</M>. Then 
  <Display>
  \xi^a} = \xi^i, \mbox{ if }  x^a= x^i
  </Display>
and 
  <Display>
  t(a,b) = \xi^j, \mbox{ if } \phi(ab)^{-1} \phi(a)\phi(b) H = x^j,
  </Display>
for <M>a,b \in N/K</M> and integers <M>i</M> and <M>j</M>, see <Cite Key="ORS" />. 
<P/>

The action of <M>N/K</M> on <M>Q(\xi)</M> is faithful and thus <M>Q(\xi)* N/K</M> is 
a cyclotomic algebra <M>(F(\xi)/F,t)</M>, where <M>F</M> is the centre of <M>Q(\xi)*N/K</M>.
In particular <M>N/K</M> is abelian and the crossed product <M>Q(\xi)*N/K</M> defined
above is isomorphic to the algebra
  <Display>
  Q(\xi)[g_1,\ldots,g_m \mid 
  \xi^{g_i} = \xi^{\alpha_i}, g_i^{o_i}=\xi^{\beta_i}, [g_i,g_j]=\xi^{\gamma_{ij}}]
  </Display>
where <P/> 
* <M>\{g_1,\ldots,g_m\}</M> is an independent set of generators of <M>N/K</M>, <P/>
* the order of <M>g_i</M> is <M>o_i</M>, for every <M>i</M> <P/>
* <M>\alpha_i</M> and <M>\beta_i</M> are integers such that 
  <Display>
  x^{G_i}= x^{\alpha_i}, \quad G_i^{o_i}=x^{\beta_i}, 
  </Display>
  where <M>G_i</M> is an element of <M>N/H</M> which is a representative of <M>g_i</M> 
  (<M>i=1,\ldots,m</M>) and <P/>
* <M>\gamma_{ij}</M> is an integer such that <M>[G_i,G_j]=x^{\gamma_{ij}}</M> 
  for every <M>i</M> smaller than <M>j</M>. <P/>
<P/>

If <M>G</M> is abelian-by-supersolvable then every primitive central idempotent of <M>QG</M> is realizable by
a strongly Shoda pair of <M>G</M> <Cite Key="ORS" />.<P/>

</Section>

<!-- ********************************************************* -->

<Section Label="CyclotomicClass">
<Heading>Cyclotomic Classes and Strongly Shoda Pairs</Heading>

Let <M>G</M> be a finite group and <M>F</M> a finite field of order <M>q</M>, 
coprime with the order of <M>G</M>. <P/>

<Index>cyclotomic class</Index>
Given a positive integer <M>n</M>, coprime with <M>q</M>, the <M>q</M>-<E>cyclotomic classes</E> module <M>n</M> 
are the set of residues classes module <M>n</M> of the form
  <Display>
  \{i,iq,iq^2,iq^3, \dots \}
  </Display>
The <M>q</M>-cyclotomic classes module <M>n</M> form a partition of the set of residue classes module <M>n</M>. <P/>

<Index>generating cyclotomic class</Index>
A <E>generating cyclotomic class </E> module <M>n</M> is a cyclotomic class containing a generator of the 
additive group of residue classes module <M>n</M>, or equivalently formed by integers coprime with <M>n</M>. <P/>

Let <M>(K,H)</M> be strongly Shoda pair <Ref Sect="SSPDef" /> of <M>G</M> and set <M>n=[K:H]</M>. 
Fix a primitive <M>n-</M>th root of the unity <M>\xi</M> in some extension of <M>F</M>
and an element <M>g</M> of <M>K</M> such that <M>gH</M> is a generator of <M>K/H</M>.
Given <M>C</M>, a generating <M>q</M>-cyclotomic class module <M>n</M> one defines 
    <Display>
    \varepsilon_C(K,H) =
    [K:H]\inv \overline{H} \sum_{i=0}^{n-1}} tr(\xi^{-ci})g^i,
    </Display>
where <M>c</M> is an arbitrary element of <M>C</M> and <M>tr</M> is the trace map of the field extension 
<M>F(\xi)/F</M>. Then <M>\varepsilon_C(K,H)</M> does not depend on the election of <M>c \in C</M> and it is a 
primitive central idempotent of <M>FK</M>. <P/>


<Index>primitive central idempotent realized by a strongly Shoda pair and a cyclotomic class</Index>
Finally let <M>e_C(G,K,H)</M> denote the sum of the different <M>G</M>-conjugates of <M>\varepsilon_C(K,H)</M>. 
Then <M>e_C(G,K,H)</M> is a primitive central idempotent of <M>FG</M> <Cite Key="BR" />. 
Then we say that <M>e_C(G,K,H)</M> is the primitive central idempotent realized by the strongly Shoda pair 
<M>(K,H)</M> of <M>G</M> and the cyclotomic class <M>C</M>.
<P/>

If every primitive central idempotent of <M>QG</M> is realizable by a strongly Shoda pair of <M>G</M> then every
primitive central idempotent of <M>FG</M> is realizable by some strongly Shoda pair of <M>G</M> 
and some cyclotomic class <M>C</M> <Cite Key="BR" />.<P/>

</Section>


</Chapter>


</Body>

<Bibliography Databases="manual"/>

<TheIndex/>

</Book>
